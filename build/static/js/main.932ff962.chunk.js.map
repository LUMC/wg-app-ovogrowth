{"version":3,"sources":["history.js","components/App.js","config.js","apis/SascWeb.js","constants/errorTypes.js","utils/generalHelpers.js","constants/types.js","constants/formValidationRules.js","components/modules/ButtonModule.js","components/modules/ContentModule.js","components/modules/ToolStepsModule.js","components/modules/ListModule.js","components/modules/FaqModule.js","components/modules/ContactCardsModule.js","components/helpers/redux-form-inputs/textInput.js","components/helpers/redux-form-inputs/fileInput.js","components/helpers/redux-form-inputs/selectInput.js","components/helpers/redux-form-inputs/index.js","components/modules/FormModule.js","components/modules/ClusterViewer/index.js","components/modules/moduleLoader.js","components/Page.js","components/hooks/pageLoader.js","containers/AppContainer.js","actions/configActions.js","actions/collectionActions.js","actions/protocols/directProtocolActions.js","actions/modules/cellTypeViewerActions.js","reducers/modules/cellTypeViewer/index.js","reducers/modules/cellTypeViewer/cellsReducer.js","reducers/modules/index.js","reducers/index.js","reducers/protocols/protocolStatusReducer.js","reducers/applicationReducer.js","reducers/configReducer.js","reducers/collectionsReducer.js","index.js"],"names":["createBrowserHistory","charPoses","exit","opacity","y","enter","delay","_ref","charIndex","App","this","props","menu","length","react_default","a","createElement","Menu","inverted","widths","className","pointing","secondary","react_router","history","map","item","key","Item","name","reference","concat","as","Link","to","Fragment","Container","Grid","columns","Row","verticalAlign","Column","textAlign","react_pose_text_es","initialPose","pose","applicationDetails","title","Transition","unmountOnHide","visible","sloganText","animation","duration","show","sub_title","renderMenu","activePageContent","Component","baseUrl","axios","create","baseURL","configError","moduleError","getOnlyPublished","data","_","values","filter","status","published","validateAttributes","obj","required_attributes","every","Object","keys","includes","validateReferenceAlias","hasOwnProperty","throwError","classCallCheck","config","message","console","error","module","moduleAttr","attrs","min","collections","protocol","application","modules","GET_CELLS","ButtonModule","setting","type","href","link","target","rel","Button","labelPosition","color","Icon","Label","basic","label","download","icon","moduleName","ContentModule","collection","pointer_set","keyBy","alias_ref","size","arguments","undefined","Header","getTitle","Parser","content","ToolStepModule","dir","dist_default","direction","time","step_name","description","tags","lineHeight","renderIconList","List","divided","relaxed","Content","Description","renderDownloadList","items","Image","avatar","circular","ListModule","FaqModule","question","answer","checkImage","cardData","image","full_url","e","ContactCardsModule","Card","Group","itemsPerRow","src","wrapped","ui","Meta","year_joined","year_left","job_description","extra","email","renderCard","required","value","redux_form_inputs_textInput","input","meta","inputAttr","Form","Field","Input","assign","autoComplete","touched","renderError","redux_form_inputs_fileInput","_ref2","_ref2$input","inputProps","objectWithoutProperties","omitMeta","redux_form_inputs_selectInput","Dropdown","selection","onChange","param","placeholder","textInput","text","fileInput","file","selectInput","select","FormModule","state","fileInputCode","onSubmit","formValues","dispatch","_this","reset","setState","Math","random","toString","substring","renderInputType","input_type","api_reference_parameter","component","validate","toLowerCase","options","createOptions","option_titles","option_values","index","titles","forEach","push","renderInputs","floated","_this2","protocolStatus","transitionOnMount","Segment","handleSubmit","renderForm","reduxForm","form","ClusterViewer","createDataPoints","plotTraces","clusters","groupBy","trace","parseFloat","tsne_1","tsne_2","marker","height","width","symbol","modulesData","cells","highcharts_react_min_default","highcharts","Highcharts","plotOptions","series","events","legendItemClick","preventDefault","legend","layout","align","backgroundColor","chart","zoomType","exporting","enabled","navigator","tooltip","headerFormat","yAxis","lineWidth","allowPointSelect","ModuleLoader","modules_ContentModule","modules_ButtonModule","ToolStepsModule","modules_ListModule","modules_FaqModule","modules_ContactCardsModule","modules_FormModule","modules_ClusterViewer","getCells","cellTypeViewer","Page","loaded","settings","moduleLoader","page","getCollection","inputs","path","dividing","renderModules","alert","AppContainer","pageView","render","api","directProtocol","log","getCollections","settingItem","uniq","loadConfig","_callee","regenerator_default","wrap","_context","prev","next","getApplication","getConfig","stop","wrapTransition","object","setTimeout","bind","_this3","exact","components_Page","_this4","renderRoutes","isEmpty","document","documentElement","style","setProperty","primary_color","components_App","renderContent","Dimmer","active","Loader","indeterminate","inline","connect","asyncToGenerator","mark","result","publishedConfig","SascWebApi","get","sent","payload","_x","apply","_callee2","_context2","_x2","rawCollections","count","collectionData","bodyFormData","FormData","set","training","append","method","url","tool_reference","headers","Content-Type","Accept","cellTypeViewerReducer","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","containers_AppContainer","getElementById"],"mappings":"kWAEeA,gBCUTC,EAAY,CACdC,KAAM,CAAEC,QAAS,EAAGC,EAAG,IACvBC,MAAO,CACHF,QAAS,EACTC,EAAG,EACHE,MAAO,SAAAC,GAAA,OAA+B,GAA/BA,EAAGC,aAwFHC,uLAnFP,OAAIC,KAAKC,MAAMC,KAAKC,OAAS,EAClB,KAGPC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAAEC,OAAQ,EAAGC,UAAW,WAAaC,UAAQ,EAACC,WAAS,GACjER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAASA,GAETd,KAAKC,MAAMC,KAAKa,IACZ,SAACC,EAAMC,GAAP,OACIb,EAAAC,EAAAC,cAACC,EAAA,EAAKW,KAAN,CACIC,KAAMH,EAAKI,UACXH,IAAG,YAAAI,OAAcJ,GACjBK,GAAIC,IACJC,GAAI,IAAIR,EAAKI,WACZJ,EAAKG,2CASlC,OACIf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACArB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAW,WAChBN,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,QAAS,GACXxB,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,CAAUC,cAAc,SAASpB,UAAW,eACxCN,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACfN,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAWC,YAAY,OAAOC,KAAK,QAAQ5C,UAAWA,GACjDS,KAAKC,MAAMmC,mBAAmBC,QAGnCjC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIC,eAAe,EACfC,QAASxC,KAAKC,MAAMwC,WACpBC,UAAW,UACXC,SAAU,CAAEC,KAAK,MAEjBxC,EAAAC,EAAAC,cAAA,WACKN,KAAKC,MAAMmC,mBAAmBS,eAMnDzC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIC,eAAe,EACfC,QAASxC,KAAKC,MAAMwC,WACpBC,UAAW,YACXC,SAAU,CAAEC,KAAK,MAErBxC,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACK/B,KAAK8C,mBAOtB1C,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIC,eAAe,EACfC,QAASxC,KAAKC,MAAMwC,WACpBC,UAAW,UACXC,SAAU,CAAEC,KAAK,MAErBxC,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBACZN,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACK1B,KAAKC,MAAM8C,8BA3ElBC,4FCpBLC,EAAQ,sCCGNC,MAAMC,OAAO,CACzBC,QAAWH,ICJDI,EACM,2DAGNC,EACO,+CADPA,EAEW,oDAFXA,EAGW,2CCJXC,EAAmB,SAACC,GAE7B,OAAOC,IAAEC,OAAOD,IAAEE,OACdH,EAAM,SAASxC,GAAO,MAAuB,cAAhBA,EAAK4C,QAA6C,cAAnB5C,EAAK6C,cAI5DC,EAAqB,SAACC,EAAKC,GACpC,OAAQA,EAAoBC,MAAM,SAAAhD,GAAG,OAAIiD,OAAOC,KAAKJ,GAAKK,SAASnD,MAG1DoD,EAAyB,SAACpD,EAAK8C,GACxC,OAAOA,EAAIO,eAAerD,IAGjBsD,EAAb,SAAAA,IAAAL,OAAAM,EAAA,EAAAN,CAAAlE,KAAAuE,IAAaA,EACFE,OAAS,SAACC,GACbC,QAAQC,MAAR,0BAAAvD,OAAyCqD,KAFpCH,EAIFM,OAAS,SAACH,GACbC,QAAQC,MAAR,mBAAAvD,OAAkCqD,KAL7BH,EAOFO,WAAa,SAACD,EAAQE,GACzBJ,QAAQC,MAAR,mBAAAvD,OAAkCwD,EAAlC,KAAAxD,OAA4CiC,EAA5C,MAAAjC,OAAiF0D,KC1BlF,ICCqBC,EDDfP,EAEG,aAGHQ,EACO,iBAGPC,EACU,qBADVA,EAEQ,kBAGRC,EACa,uBAIbC,EACO,CACZC,UAAW,iCEuBJC,GAvCM,SAACrF,GAClB,OAAOA,EAAMsF,QAAQd,OAAOe,MACxB,IAAK,SACD,OACIpF,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB5B,EAAAC,EAAAC,cAAA,KAAGmF,KAAMxF,EAAMsF,QAAQd,OAAOA,OAAOiB,KAAMC,OAAO,SAASC,IAAI,uBAC/DxF,EAAAC,EAAAC,cAACuF,GAAA,EAAD,CAAQvE,GAAG,MAAMwE,cAAc,SAC3B1F,EAAAC,EAAAC,cAACuF,GAAA,EAAD,CAAQE,MAAM,QACV3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAM7E,KAAK,WADf,UAIAf,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,CAAOC,OAAK,EAAEvF,SAAS,QAClBV,EAAMsF,QAAQd,OAAOA,OAAO0B,WAOrD,IAAK,WACD,OACI/F,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,CAAaC,UAAW,UACpB5B,EAAAC,EAAAC,cAAA,KAAGmF,KAAMxF,EAAMsF,QAAQd,OAAOA,OAAOiB,KAAMU,UAAQ,EAACT,OAAQ,UAC5DvF,EAAAC,EAAAC,cAACuF,GAAA,EAAD,CAAQQ,MAAI,EAACP,cAAc,QACvB1F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAM7E,KAAK,UACVlB,EAAMsF,QAAQd,OAAOA,OAAO0B,UAMjD,QAEI,OADA5B,EAAWM,OAAX,8BAAAxD,OAAgDpB,EAAMqG,WAAtD,eACO,sCC/BbtC,GAAsB,CAAC,kBAAmB,WAuCjCuC,GAtBO,SAACtG,GACnB,GAAIA,EAAMuG,WAAW,CACjB,IAAK1C,EAAmB7D,EAAMuG,WAAW,GAAIxC,IACU,OAAnDO,EAAWO,WArBR,UAqB2Bd,IAA4B,KAC9D,IAAMyC,EAAchD,IAAEiD,MAAMzG,EAAMuG,WAAY,mBAC9C,OAAKnC,EAAuBpE,EAAMsF,QAAQoB,UAAWF,GAGjDrG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KAvBK,SAACY,GAAoB,IAAbuE,EAAaC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAIxE,EAIAjC,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACI3B,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAQzF,GAAIsF,GACPvE,KANN,KAsBF2E,CAASP,EAAYxG,EAAMsF,QAAQoB,WAAWtE,OAC/CjC,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACCkF,KAAOR,EAAYxG,EAAMsF,QAAQoB,WAAWO,aANjD3C,EAAWM,OAAOvB,GAAuC,MAYjE,OAAO,2BCtCLU,GAAsB,CAAC,OAAQ,QAAS,YAAa,cAAe,QAqC3DmD,GAlCQ,SAAClH,GACpB,OAAIA,EAAMuG,WACD1C,EAAmB7D,EAAMuG,WAAW,GAAIxC,IAGzC5D,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,CAAarB,UAAW,YACnBT,EAAMuG,WAAWzF,IACd,SAACC,EAAMC,GACH,IAAImG,GAAQnG,EAAM,GAAG,IAAM,EAAG,OAAQ,QACtC,OACIb,EAAAC,EAAAC,cAAC+G,GAAAhH,EAAD,CACIY,IAAG,gBAAAI,OAAkBJ,GACrBP,UAAW,YACX4G,UAAWF,EACXf,KAAMrF,EAAKqF,KACXhE,MAAOrB,EAAKqB,MACZkF,KAAI,GAAAlG,OAAKJ,EAAI,EAAT,KAAAI,OAAcL,EAAKwG,WACvBC,YAAazG,EAAKyG,YAClB1B,MAAM,OACN2B,KAAM1G,EAAK0G,KACXC,WAAY1G,SAlBpCsD,EAAWO,WAPR,aAO2Bd,IAA4B,MA2B3D,0BChCLgD,GAAW,SAAC3E,GAAoB,IAAbuE,EAAaC,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAR,KAC1B,OAAIxE,EAIAjC,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACI3B,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAQzF,GAAIsF,GACPvE,KANN,MA0BTuF,GAAiB,SAAC3H,GACpB,IACM+D,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmB7D,EAAMuG,WAAW,GAAIxC,GACU,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAMyC,EAAchD,IAAEiD,MAAMzG,EAAMuG,WAAY,mBAC9C,OAAKnC,EAAuBpE,EAAMsF,QAAQoB,UAAWF,GAIjDrG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACKuF,GAAS/G,EAAMsF,QAAQlD,OACxBjC,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACI3B,EAAAC,EAAAC,cAACuH,GAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,GAChB9H,EAAMuG,WAAWzF,IACd,SAACC,EAAMC,GACH,OACIb,EAAAC,EAAAC,cAACuH,GAAA,EAAK3G,KAAN,CAAWD,IAAG,aAAAI,OAAeJ,EAAf,KAAAI,OAAsBpB,EAAMsF,QAAQiB,aAC9CpG,EAAAC,EAAAC,cAACuH,GAAA,EAAK7B,KAAN,CAAW7E,KAAMH,EAAKqF,KAAMO,KAAK,QAAQ9E,cAAc,QACvD1B,EAAAC,EAAAC,cAACuH,GAAA,EAAKG,QAAN,KACI5H,EAAAC,EAAAC,cAACuH,GAAA,EAAKd,OAAN,CAAazF,GAAG,KAAKN,EAAKqB,OAC1BjC,EAAAC,EAAAC,cAACuH,GAAA,EAAKI,YAAN,CAAkB3G,GAAG,KAAKN,EAAKyG,sBAfnElD,EAAWM,OAAOvB,GAAuC,OA2B3D4E,GAAqB,SAACjI,GACxB,IACM+D,EAAsB,CAAC,OAAQ,QAAS,eAC9C,IAAKF,EAAmB7D,EAAMuG,WAAW,GAAG2B,MAAM,GAAInE,GACC,OAAnDO,EAAWO,WAHA,aAGmBd,GAA4B,KAC9D,IAAMyC,EAAchD,IAAEiD,MAAMzG,EAAMuG,WAAY,mBAC9C,OAAKnC,EAAuBpE,EAAMsF,QAAQoB,UAAWF,GAGjDrG,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACKiF,GAAS/G,EAAMsF,QAAQlD,MAAO,MAC/BjC,EAAAC,EAAAC,cAACuH,GAAA,EAAD,KACKpB,EAAYxG,EAAM0G,WAAWwB,MAAMpH,IAChC,SAACC,EAAMC,GACH,OACIb,EAAAC,EAAAC,cAACuH,GAAA,EAAK3G,KAAN,CAAWD,IAAG,iBAAAI,OAAmBJ,IAC7Bb,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,CAAOC,QAAM,GACTjI,EAAAC,EAAAC,cAAA,KAAGmF,KAAMzE,EAAK0E,KAAMU,UAAQ,GACxBhG,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAMqC,OAAQ,OAAQC,UAAQ,EAAC9H,UAAQ,EAACW,KAAK,eAGrDf,EAAAC,EAAAC,cAACuH,GAAA,EAAKG,QAAN,KACI5H,EAAAC,EAAAC,cAACuH,GAAA,EAAKd,OAAN,KAAc/F,EAAKqB,OAClBrB,EAAKyG,oBAjBtClD,EAAWM,OAAOvB,GAAuC,OA6BlDiF,GApFI,SAACtI,GAChB,GAAIA,EAAMuG,WACN,OAAQvG,EAAMsF,QAAQd,OAAOe,MACzB,IAAK,YACD,OAAOoC,GAAe3H,GAC1B,IAAK,gBACD,OAAOiI,GAAmBjI,GAC9B,QACI,OAAO,KAGnB,OAAO,MCEIuI,GA7BG,SAACvI,GACf,GAAIA,EAAMuG,WAAW,CACjB,IACIxC,EAAsB,CAAC,WAAY,UACvC,OAAKF,EAAmB7D,EAAMuG,WAAW,GAAIxC,GAGzC5D,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACK9B,EAAMuG,WAAWzF,IACd,SAACC,EAAMC,GAEH,OACIb,EAAAC,EAAAC,cAAA,OAAKW,IAAG,mBAAAI,OAAqBJ,IACzBb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,eAAOU,EAAKyH,WACdxB,KAAOjG,EAAK0H,QACbtI,EAAAC,EAAAC,cAAA,iBAXxBiE,EAAWO,WAHF,OAGqBd,GAA4B,MAoBlE,OAAO,gBCzBL2E,GAAa,SAACC,GAChB,IACI,OAAOA,EAASC,MAAMrF,KAAKsF,SAE/B,MAAOC,GACH,MAAO,oCAkDAC,GAxBY,SAAC/I,GACxB,GAAIA,EAAMuG,WAAW,CACjB,IACIxC,EAAsB,CAAC,OAAQ,kBAAmB,eACtD,OAAKF,EAAmB7D,EAAMuG,WAAW,GAAIxC,GAGzC5D,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACI3B,EAAAC,EAAAC,cAAC2I,GAAA,EAAKC,MAAN,CAAYlH,UAAW,SAAUmH,YAAa,GACzClJ,EAAMuG,WAAWzF,IACd,SAACC,EAAMC,GACH,OAnCZ,SAAC2H,EAAU3H,GAC3B,OACIb,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAMhI,IAAG,gBAAAI,OAAkBJ,IACvBb,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,CAAOgB,IAAKT,GAAWC,GAAWS,SAAO,EAACC,IAAI,IAC9ClJ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKjB,QAAN,KACI5H,EAAAC,EAAAC,cAAC2I,GAAA,EAAKlC,OAAN,KAAc6B,EAASzH,MACvBf,EAAAC,EAAAC,cAAC2I,GAAA,EAAKM,KAAN,KACInJ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAhB,aACekI,EAASY,YAAaZ,EAASa,UAAW,aAAab,EAASa,UAAU,KAG7FrJ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKhB,YAAN,KACKW,EAASc,kBAGlBtJ,EAAAC,EAAAC,cAAC2I,GAAA,EAAKjB,QAAN,CAAc2B,OAAK,GACXvJ,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAM7E,KAAK,SACVyH,EAASgB,QAkBSC,CAAW7I,EAAMC,SAP5CsD,EAAWO,WAHF,gBAGqBd,GAA4B,MAelE,OAAO,8CNxDE8F,GAAW,SAAAC,GAAK,OAAIA,OAAQjD,EAAY,gBACzB9B,EACU,iBOQvBgF,GAAA,SAACC,EAAO9D,EAAO+D,EAAMC,GAChC,OACI/J,EAAAC,EAAAC,cAAC8J,GAAA,EAAKC,MAAN,KACIjK,EAAAC,EAAAC,cAAA,aAAQ6F,GACR/F,EAAAC,EAAAC,cAACgK,GAAA,EAADpG,OAAAqG,OAAA,GAAWN,EAAYE,EAAvB,CAAkCK,aAAa,SAXvC,SAAA3K,GAAqB,IAAnB4K,EAAmB5K,EAAnB4K,QAAS7F,EAAU/E,EAAV+E,MAC3B,GAAG6F,GAAW7F,EACV,OACIxE,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBkE,GAShC8F,CAAYR,eCJTS,GAAA,SAAAC,GAA4E,IAAAC,EAAAD,EAAzEX,MAA6Ba,GAA4CD,EAAjEd,MAAiE7F,OAAA6G,GAAA,EAAA7G,CAAA2G,EAAA,YAAxBG,EAAwBJ,EAA9BV,KAAmBjK,EAAWiE,OAAA6G,GAAA,EAAA7G,CAAA0G,EAAA,kBACxF,OACIxK,EAAAC,EAAAC,cAAC8J,GAAA,EAAKC,MAAN,KACIjK,EAAAC,EAAAC,cAAA,aAAQL,EAAMkG,OACd/F,EAAAC,EAAAC,cAACgK,GAAA,EAADpG,OAAAqG,OAAA,CACI/E,KAAM,QACFsF,EACA7K,EAAMgK,MAHd,CAIIO,aAAa,SAhBT,SAAA3K,GAAqB,IAAnB4K,EAAmB5K,EAAnB4K,QAAS7F,EAAU/E,EAAV+E,MAC3B,GAAG6F,GAAW7F,EACV,OACIxE,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBkE,GAchC8F,CAAYM,eCVVC,GAAA,SAAChB,EAAO9D,EAAO+D,EAAMC,GAChC,OACI/J,EAAAC,EAAAC,cAAC8J,GAAA,EAAKC,MAAN,KACIjK,EAAAC,EAAAC,cAAA,aAAQ6F,GACR/F,EAAAC,EAAAC,cAAC4K,GAAA,EAADhH,OAAAqG,OAAA,CAAUY,WAAS,GAAKlB,EACVE,EADd,CAEUJ,MAAOE,EAAMF,MACbqB,SAAU,SAACC,EAAO7H,GAAR,OAAiByG,EAAMmB,SAAS5H,EAAKuG,QAC/CuB,YAAanF,KAff,SAAAtG,GAAsB,IAApB4K,EAAoB5K,EAApB4K,QAAS7F,EAAW/E,EAAX+E,MAC3B,GAAI6F,GAAW7F,EACX,OACIxE,EAAAC,EAAAC,cAAA,OAAKI,UAAW,gBAAiBkE,GAchC8F,CAAYR,KCdZqB,GAAY,SAAA1L,GAAA,IAAEoK,EAAFpK,EAAEoK,MAAM9D,EAARtG,EAAQsG,MAAM+D,EAAdrK,EAAcqK,KAAKC,EAAnBtK,EAAmBsK,UAAnB,OAAkCqB,GAAKvB,EAAM9D,EAAM+D,EAAKC,IACpEsB,GAAY,SAACxL,GAAD,OAAWyL,GAAKzL,IAC5B0L,GAAc,SAAAf,GAAA,IAAEX,EAAFW,EAAEX,MAAM9D,EAARyE,EAAQzE,MAAM+D,EAAdU,EAAcV,KAAKC,EAAnBS,EAAmBT,UAAnB,OAAkCyB,GAAO3B,EAAM9D,EAAM+D,EAAKC,ICA/E0B,8MAEFC,MAAQ,CAACC,cAAe,cACxBC,SAAW,SAACC,EAAYC,GACpBC,EAAKlM,MAAM+L,SACPG,EAAKlM,MAAMuG,WAAX,KAA8B,GAC9ByF,GAEJC,EAASE,aAAM,aACfD,EAAKE,SAAS,CAACN,cAAeO,KAAKC,SAASC,SAAS,IAAIC,UAAU,QAiBvEC,gBAAkB,SAACzC,EAAOhJ,GACtB,OAAQgJ,EAAM0C,WAAWnH,MACrB,IAAK,OACD,OACIpF,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CACIpJ,IAAG,eAAAI,OAAiBJ,GACpBE,KAAM8I,EAAM2C,wBACZC,UAAWtB,GACXuB,SAAU,CAAEhD,IACZ3D,MAAO8D,EAAM9D,MACbgE,UAAW,CACPmB,YAAW,aAAAjK,OAAe4I,EAAM9D,MAAM4G,eACtCvH,KAAK,UAIrB,IAAK,OACD,OACIpF,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CACIpJ,IAAG,eAAAI,OAAiBJ,EAAjB,KAAAI,OAAwB8K,EAAKL,MAAMC,eACtC5K,KAAM8I,EAAM2C,wBACZC,UAAWpB,GACXtF,MAAO8D,EAAM9D,MACbgE,UAAW,CACPmB,YAAW,aAAAjK,OAAe4I,EAAM9D,MAAM4G,kBAItD,IAAK,SACD,IAAMC,EAAUb,EAAKc,cAAchM,EAAKgJ,EAAMiD,cAAejD,EAAMkD,eACnE,OACI/M,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,CACIpJ,IAAG,eAAAI,OAAiBJ,GACpBE,KAAM8I,EAAM2C,wBACZC,UAAWlB,GACXmB,SAAU,CAAEhD,IACZ3D,MAAO8D,EAAM9D,MACbgE,UAAW,CACPmB,YAAW,aAAAjK,OAAe4I,EAAM9D,MAAM4G,eACtCC,QAASA,KAKzB,QACI,OAAO,SAInBC,cAAgB,SAACG,EAAOC,EAAQ3J,GAC5B,IAAMsJ,EAAU,GAUhB,OATAK,EAAOC,QACH,SAACjL,EAAOpB,GACJ+L,EAAQO,KAAK,CACTtM,IAAA,cAAAI,OAAqB+L,EAArB,KAAA/L,OAA8BJ,GAC9BuK,KAAQ6B,EAAOpM,GACf8I,MAASrG,EAAOzC,OAIrB+L,+EA1EP,OAAGhN,KAAKC,MAAMuG,WAAX,OAAgCrG,OAAS,EACjCC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sCAGNF,EAAAC,EAAAC,cAAA,WACKN,KAAKwN,eACNpN,EAAAC,EAAAC,cAACuF,GAAA,EAAD,CAAQL,KAAM,SAAUa,MAAI,EAACP,cAAc,OAAOc,KAAK,QAAS6G,QAAQ,SACpErN,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAM7E,KAAK,gBADf,gDAsEF,IAAAuM,EAAA1N,KACV,OAAOA,KAAKC,MAAMuG,WAAX,OAAgCzF,IACnC,SAACkJ,EAAOhJ,GAAR,OAAgByM,EAAKhB,gBAAgBzC,EAAOhJ,sCAKhD,IAAIjB,KAAKC,MAAMuG,WAAX,OACA,OAAO,KAEX,IAAI3B,EAAS,YACTb,EAAsB,CAAC,QAAS,MAAO,iBAAkB,eAC7D,OAAKF,EAAmB9D,KAAKC,MAAMuG,WAAX,KAA8B,GAAIxC,IAE1Da,EAAS,cACTb,EAAsB,CAAC,0BAA2B,QAAS,cACtDF,EAAmB9D,KAAKC,MAAMuG,WAAX,OAAgC,GAAIxC,GAGxD5D,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACM/B,KAAKC,MAAM0N,iBAAmBzI,EAC5B9E,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIsL,mBAAmB,EACnBlL,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjBxC,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAAS9H,MAAO,SACZ3F,EAAAC,EAAAC,cAAA,gCADJ,6CAIN,GAEAN,KAAKC,MAAM0N,iBAAmBzI,EAC5B9E,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACIsL,mBAAmB,EACnBlL,UAAW,aACXC,SAAU,CAAEC,KAAK,MAEjBxC,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAAS9H,MAAO,OACZ3F,EAAAC,EAAAC,cAAA,4CADJ,2DAIN,GAEFF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CAAM4B,SAAUhM,KAAKC,MAAM6N,aAAa9N,KAAKgM,WACxChM,KAAK+N,iBA9BlBxJ,EAAWO,WAAWD,EAAQb,GAA4B,QAJ1DO,EAAWO,WAAWD,EAAQb,GAA4B,aArG7ChB,aA+IVgL,gBAAU,CACrBC,KAAK,YADMD,CAEZnC,8CCvEYqC,8MA1EXC,iBAAmB,SAAC3K,GAChB,IAAM4K,EAAa,GACbC,EAAW5K,IAAE6K,QAAQ9K,EAAM,cAkBjC,OAjBAU,OAAOC,KAAKkK,GAAUf,QAAS,SAACrM,GAC5B,IAGMsN,EAAQ,CACV/K,KAJe6K,EAASpN,GAAKF,IAAK,SAACC,GACnC,MAAO,CAACwN,WAAWxN,EAAKyN,QAASD,WAAWxN,EAAK0N,WAIjDvN,KAAM,SAASF,EACfxB,QAAS,GACTkP,OAAQ,CACJC,OAAQ,EACRC,MAAO,EACPC,OAAQ,UAEZpM,WAAW,GAEf0L,EAAWb,KAAKgB,KAEbH,2EAGP,OAAIpO,KAAKC,MAAM8O,YAAYC,MAAM7O,OAAS,EAAS,KAE/CC,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,CAAa8M,MAAO,IAChBzO,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CACI6O,WAAYC,KACZnC,QAAS,CACLoC,YAAa,CACTC,OAAQ,CACJC,OAAQ,CACJC,gBAAiB,SAAUxG,GACvBA,EAAEyG,qBAKlBC,OAAQ,CACJC,OAAQ,WACRC,MAAO,QACP7N,cAAe,MACf8N,gBAAiB,WAErBC,MAAO,CACHrK,KAAM,UACNsK,SAAS,KACTlB,OAAQ,SAEZmB,UAAW,CACPC,SAAS,GAEbC,UAAW,CACPD,SAAS,GAEb3N,MAAO,CACHmJ,KAAM,YAEV0E,QAAS,CACLC,aAAc,4BAElBC,MAAM,CAAC,CACHC,UAAW,EACXhO,MAAM,KAEViO,kBAAkB,EAClBjB,OAAQrP,KAAKmO,iBAAiBnO,KAAKC,MAAM8O,YAAYC,kBApEjDhM,aCsEbuN,GA9DM,SAACtQ,GAClB,OAAOA,EAAMsF,QAAQV,QACjB,IAAK,UACD,OACIzE,EAAAC,EAAAC,cAACkQ,GAAD,CACIjL,QAAStF,EAAMsF,QACfiB,WAAYvG,EAAMuG,aAG9B,IAAK,SACD,OACIpG,EAAAC,EAAAC,cAACmQ,GAAD,CACIlL,QAAStF,EAAMsF,UAG3B,IAAK,aACD,OACInF,EAAAC,EAAAC,cAACoQ,GAAD,CACIlK,WAAYvG,EAAMuG,aAG9B,IAAK,OACD,OACIpG,EAAAC,EAAAC,cAACqQ,GAAD,CACIhK,UAAW1G,EAAMsF,QAAQoB,UACzBpB,QAAStF,EAAMsF,QACfiB,WAAYvG,EAAMuG,aAG9B,IAAK,OACD,OACIpG,EAAAC,EAAAC,cAACsQ,GAAD,CACIpK,WAAYvG,EAAMuG,aAG9B,IAAK,gBACD,OACIpG,EAAAC,EAAAC,cAACuQ,GAAD,CACIrK,WAAYvG,EAAMuG,aAG9B,IAAK,OACD,OACIpG,EAAAC,EAAAC,cAACwQ,GAAD,CACI9E,SAAU/L,EAAM+L,SAChBxF,WAAYvG,EAAMuG,WAClBmH,eAAgB1N,EAAM0N,iBAGlC,IAAK,iBACD,OACIvN,EAAAC,EAAAC,cAACyQ,GAAD,CACIC,SAAU/Q,EAAM+Q,SAChBjC,YAAa9O,EAAM8O,YAAYkC,iBAG3C,QAEI,OADA1M,EAAWM,OAAOvB,GACX,OCMF4N,8MAvEbpF,MAAQ,CAACqF,QAAQ,sFAEbnR,KAAKqM,SAAS,CAAC8E,QAAO,0CAGX3K,GACX,OAAKA,GAGDA,KAAcxG,KAAKC,MAAMgF,YAClBjF,KAAKC,MAAMgF,YAAYuB,GAHvB,6CASA,IAAAkH,EAAA1N,KACX,OAAOA,KAAKC,MAAMwE,OAAO2M,SAASrQ,IAC9B,SAACwE,EAAStE,GACN,MAAuB,SAAnBsE,EAAQV,OAEJzE,EAAAC,EAAAC,cAAC+Q,GAAD,CACItC,YAAarB,EAAKzN,MAAM8O,YACxBiC,SAAUtD,EAAKzN,MAAM+Q,SACrBhF,SAAU0B,EAAKzN,MAAM+L,SACrBsF,KAAM5D,EAAKzN,MAAMwE,OAAOtD,KACxBF,IAAG,UAAAI,OAAYqM,EAAKzN,MAAMwE,OAAOrD,UAA9B,KAAAC,OAA2CJ,GAC9CuF,WAAY,CACRyH,KAAQP,EAAK6D,cAAchM,EAAQiB,YACnCgL,OAAU9D,EAAK6D,cAAc,WAEjChM,QAASA,EACToI,eAAgBD,EAAKzN,MAAM0N,iBAKnCvN,EAAAC,EAAAC,cAAC+Q,GAAD,CACItC,YAAarB,EAAKzN,MAAM8O,YACxBiC,SAAUtD,EAAKzN,MAAM+Q,SACrBM,KAAM5D,EAAKzN,MAAMwE,OAAOtD,KACxBF,IAAG,UAAAI,OAAYqM,EAAKzN,MAAMwE,OAAOrD,UAA9B,KAAAC,OAA2CJ,GAC9CuF,WAAYkH,EAAK6D,cAAchM,EAAQiB,YACvCjB,QAASA,uCAOzB,OAAKvF,KAAKC,MAAMwR,KAGXzR,KAAK8L,MAAMqF,OAIZ/Q,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAACqB,EAAA,EAAKE,IAAN,KACIzB,EAAAC,EAAAC,cAACqB,EAAA,EAAKI,OAAN,KACI3B,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAQzF,GAAG,KAAKoQ,UAAQ,GACnB1R,KAAKC,MAAMwE,OAAOtD,QAI9BnB,KAAK2R,iBAXQ3R,KAAK8L,MAAMqF,OC1Df,MACtBS,MAAM,QAEFxR,EAAAC,EAAAC,cAAA,uBDoDW,YApDA0C,aEeb6O,8MAEF/F,MAAQ,CACJ5L,KAAM,GACNuC,YAAY,EACZqP,UAAU,EACVC,QAAQ,EACRtN,QAAQ,KAEZuH,SAAW,SAACvH,EAAQf,GAChB,OAAQe,EAAOuN,IAAI9M,UACf,IAAK,SACDiH,EAAKlM,MAAMgS,eAAexN,EAAQf,GACtC,MACA,QACIiB,QAAQuN,IAAI,2CAGxBC,eAAiB,WACb,IAAMlN,EAAc,GAgBpB,OAfAkH,EAAKlM,MAAMwE,OAAO6I,QACd,SAAC8E,GACGA,EAAYhB,SAAS9D,QACjB,SAACtM,GACMA,EAAKwF,aACmB,SAApBxF,EAAKwF,aACJvB,EAAYsI,KAAKvM,EAAKwF,YACtBvB,EAAYsI,KAAK,WAErBtI,EAAYsI,KAAKvM,EAAKwF,iBAMnC/C,IAAE4O,KAAKpN,MAGlBqN,gCAAa,SAAAC,IAAA,IAAAtN,EAAA,OAAAuN,EAAAnS,EAAAoS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHzG,EAAKlM,MAAM4S,iBADR,cAAAH,EAAAE,KAAA,EAEHzG,EAAKlM,MAAM6S,YAFR,cAGH7N,EAAckH,EAAKgG,iBAHhBO,EAAAE,KAAA,EAIHzG,EAAKlM,MAAMkS,eAAelN,GAJvB,OAKTkH,EAAKE,SAAS,CAACnM,KAAKiM,EAAKlM,MAAMwE,SALtB,wBAAAiO,EAAAK,SAAAR,QAiDbS,eAAkB,SAACC,GACf,OAAOA,8FAxCHjT,KAAKqM,SAAS,CAAC5H,QAAQ,gDAGX,IAAAiJ,EAAA1N,KAChBA,KAAKsS,aACLtS,KAAKC,MAAM+Q,WACXkC,WAAW,WACPlT,KAAKqM,SAAS,CAAC0F,QAAQ,KACzBoB,KAAKnT,MAAO,KACdkT,WACI,WACIxF,EAAKrB,SAAS,CAAC5J,YAAY,KAC5B,6CAEI,IAAA2Q,EAAApT,KACX,OAAOA,KAAKC,MAAMwE,OAAO1D,IACrB,SAACC,GACG,OACIZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACII,IAAG,SAAAI,OAAWL,EAAKI,WACnBqQ,KAAM,IAAIzQ,EAAKI,UACfiS,OAAK,EACLtB,OAAQ,SAAC9R,GAAD,OAAWmT,EAAKJ,eACpB5S,EAAAC,EAAAC,cAACgT,GAADpP,OAAAqG,OAAA,GACQtK,EADR,CAEI8O,YAAaqE,EAAKnT,MAAMmF,QACxB4L,SAAUoC,EAAKnT,MAAM+Q,SACrBS,KAAM,IAAIzQ,EAAKI,UACfqD,OAAQzD,EACRiE,YAAamO,EAAKnT,MAAMgF,YACxB+G,SAAUoH,EAAKpH,SACf2B,eAAgByF,EAAKnT,MAAM0N,gEAWvC,IAAA4F,EAAAvT,KACZ,OAAgC,IAA7BA,KAAKC,MAAMwE,OAAOtE,OACV,KAGPC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,QAASA,GACbV,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACIT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACI4Q,KAAK,IACL4B,OAAK,EACLtB,OAAQ,SAAC9R,GAAD,OAAWsT,EAAKP,eACpB5S,EAAAC,EAAAC,cAACgT,GAADpP,OAAAqG,OAAA,GAAUtK,EAAV,CACM+Q,SAAUuC,EAAKtT,MAAM+Q,SACrBjC,YAAawE,EAAKtT,MAAMmF,QACxBqM,KAAM,IAAI8B,EAAKtT,MAAMwE,OAAO,GAAGrD,UAC/BqD,OAAQ8O,EAAKtT,MAAMwE,OAAO,GAC1BQ,YAAasO,EAAKtT,MAAMgF,YACxB0I,eAAgB4F,EAAKtT,MAAM0N,eAC3B3B,SAAUuH,EAAKvH,gBAI5BhM,KAAKwT,kDAMlB,OAAGxT,KAAK8L,MAAMiG,SAAWtO,IAAEgQ,QAAQzT,KAAKC,MAAMwE,SAC1CiP,SACKC,gBAAgBC,MAAMC,YAAY,kBAAmB7T,KAAKC,MAAMkF,YAAY2O,eACzE1T,EAAAC,EAAAC,cAACyT,EAAD,CACA3R,mBAAoBpC,KAAKC,MAAMkF,YAC/BpC,kBAAmB/C,KAAKgU,gBACxB/O,YAAajF,KAAKC,MAAMgF,YACxBR,OAAQzE,KAAKC,MAAMwE,OACnBvE,KAAMF,KAAKC,MAAMwE,UAIpBzE,KAAK8L,MAAMiG,QAUhBxN,EAAWE,OAAOpB,GAEdjD,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAASnN,UAAW,mBAChBN,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAQC,QAAM,GACV9T,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAM7E,KAAK,QAAQyF,KAAK,OAAOpG,UAAQ,EAACuF,MAAM,SAC9C3F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sCAdRF,EAAAC,EAAAC,cAACuN,EAAA,EAAD,CAASnN,UAAW,mBAChBN,EAAAC,EAAAC,cAAC2T,EAAA,EAAD,CAAQC,QAAM,GACV9T,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAQC,eAAa,EAACC,OAAO,YAA7B,iBrB1JC,YqB0JD,qBAtIGrR,aAmKZsR,eATS,SAACxI,GACrB,MAAO,CACHrH,OAAQhB,IAAEC,OAAOoI,EAAMrH,QACvBQ,YAAa6G,EAAM7G,YACnB0I,eAAe7B,EAAM6B,eACrBxI,YAAa2G,EAAM3G,YAAY,GAC/BC,QAAS0G,EAAM1G,UAInB,CACI0N,UCrLiB,iCAAAjT,EAAAqE,OAAAqQ,EAAA,EAAArQ,CAAAsO,EAAAnS,EAAAmU,KAAM,SAAAjC,EAAOrG,GAAP,IAAAuI,EAAAC,EAAA,OAAAlC,EAAAnS,EAAAoS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACN+B,EAAWC,IAAI,gBADT,OACrBH,EADqB/B,EAAAmC,KAErBH,EAAkBnR,EAAiBkR,EAAOjR,KAAKA,MACrD0I,EAAS,CAAC1G,KAAMf,EAAmBqQ,QAASJ,IAHjB,wBAAAhC,EAAAK,SAAAR,MAAN,gBAAAwC,GAAA,OAAAlV,EAAAmV,MAAAhV,KAAA6G,YAAA,IDsLjBgM,eChLsB,iCAAAjI,EAAA1G,OAAAqQ,EAAA,EAAArQ,CAAAsO,EAAAnS,EAAAmU,KAAM,SAAAS,EAAO/I,GAAP,IAAAuI,EAAAC,EAAA,OAAAlC,EAAAnS,EAAAoS,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACX+B,EAAWC,IAAI,qBADJ,OAC1BH,EAD0BS,EAAAL,KAE1BH,EAAkBnR,EAAiBkR,EAAOjR,KAAKA,MACrD0I,EAAS,CAAC1G,KAAML,EAAkC2P,QAASJ,IAH3B,wBAAAQ,EAAAnC,SAAAkC,MAAN,gBAAAE,GAAA,OAAAvK,EAAAoK,MAAAhV,KAAA6G,YAAA,IDiLtBsL,eEvLsB,SAACiD,GAAD,OAAoB,SAAClJ,GAC/C,IAAImJ,EAAQ,EACRC,EAAiB,GACrBF,EAAe9H,QAAf,eAAAzN,EAAAqE,OAAAqQ,EAAA,EAAArQ,CAAAsO,EAAAnS,EAAAmU,KAAwB,SAAAjC,EAAOvR,GAAP,IAAAyT,EAAA,OAAAjC,EAAAnS,EAAAoS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC+B,EAAWC,IAAI,SAAS5T,EAAK,iBAD9B,OACdyT,EADc/B,EAAAmC,KAEpBS,EAAetU,GAAQuC,EAAiBkR,EAAOjR,KAAKA,QACpD6R,IACaD,EAAejV,QACxB+L,EAAS,CAAC1G,KAAMP,EAA4B6P,QAAQQ,IALpC,wBAAA5C,EAAAK,SAAAR,MAAxB,gBAAAwC,GAAA,OAAAlV,EAAAmV,MAAAhV,KAAA6G,YAAA,MFqLIoL,eGzLsB,SAACxN,EAAQjB,GAAT,sBAAA3D,EAAAqE,OAAAqQ,EAAA,EAAArQ,CAAAsO,EAAAnS,EAAAmU,KAAkB,SAAAjC,EAAOrG,GAAP,IAAAqJ,EAAA,OAAA/C,EAAAnS,EAAAoS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxC2C,EAAe,IAAIC,UACVC,IAAI,QAASjS,EAAKoG,OAC/B2L,EAAaE,IAAI,WAAYjS,EAAKkS,UAClCH,EAAaI,OAAO,OAAQnS,EAAKkI,KAAK,IAJMgH,EAAAE,KAAA,EAKtC1P,IAAM,CACR0S,OAAQ,OACRC,IAAKpR,EAAOqR,eACZtS,KAAM+R,EACN9Q,OAAQ,CAAEsR,QAAS,CAACC,eAAgB,sBAAwBC,OAAU,gBAT9B,OAW5C/J,EAAS,CACL1G,KAAKN,IAZmC,wBAAAwN,EAAAK,SAAAR,MAAlB,gBAAAwC,GAAA,OAAAlV,EAAAmV,MAAAhV,KAAA6G,YAAA,IH0LtBmK,SI1LgB,iCAAAnR,EAAAqE,OAAAqQ,EAAA,EAAArQ,CAAAsO,EAAAnS,EAAAmU,KAAM,SAAAjC,EAAOrG,GAAP,IAAAuI,EAAA,OAAAjC,EAAAnS,EAAAoS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACL+B,EAAWC,IAAI,2BADV,OACpBH,EADoB/B,EAAAmC,KAE1B3I,EAAS,CAAC1G,KAAMJ,EAAuBC,UAAWyP,QAASL,EAAOjR,KAAKA,OAF7C,wBAAAkP,EAAAK,SAAAR,MAAN,gBAAAwC,GAAA,OAAAlV,EAAAmV,MAAAhV,KAAA6G,YAAA,KJoLTyN,CAORzC,8BK5LMqE,GAAwBC,YAAgB,CACjDnH,MCFW,WAAsB,IAArBlD,EAAqBjF,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIuP,EAAWvP,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EACjC,OAAQsP,EAAO5Q,MACX,KAAKJ,EAAuBC,UACxB,OAAO+Q,EAAOtB,QAClB,QACI,OAAOhJ,MCJJqK,eAAgB,CAC3BlF,eAAgBiF,KCILC,eAAgB,CAC3BlI,KAAMoI,KACN1I,eCRW,WAAsB9G,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,IAAAA,UAAA,GACjC,QADiCA,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,GAClBtB,MACX,KAAKN,EACD,OAAOA,EACX,QACI,MAAO,KDIfC,YETW,WAAsB,IAArB2G,EAAqBjF,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIuP,EAAWvP,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EACjC,OAAQsP,EAAO5Q,MACX,KAAKL,EACD,OAAOiR,EAAOtB,QAClB,QACI,OAAOhJ,IFKfrH,OGVW,WAAsB,IAArBqH,EAAqBjF,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIuP,EAAWvP,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EACjC,OAAQsP,EAAO5Q,MACX,KAAKf,EACD,OAAO2R,EAAOtB,QAClB,QACI,OAAOhJ,IHMf7G,YIXW,WAAsB,IAArB6G,EAAqBjF,UAAA1G,OAAA,QAAA2G,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIuP,EAAWvP,UAAA1G,OAAA,EAAA0G,UAAA,QAAAC,EACjC,OAAQsP,EAAO5Q,MACX,KAAKP,EACD,OAAOmR,EAAOtB,QAClB,QACI,OAAOhJ,IJOf1G,QAASA,KKHPkR,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YAAYC,GACtBN,GAAiBO,YAAgBC,OAGrCC,IAAShF,OACL3R,EAAAC,EAAAC,cAAC0W,EAAA,EAAD,CAAUN,MAAOA,IACbtW,EAAAC,EAAAC,cAAC2W,GAAD,OAEJvD,SAASwD,eAAe","file":"static/js/main.932ff962.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, {Component} from 'react'\n\nimport {\n    Container,\n    Grid,\n    Menu,\n    Transition\n} from \"semantic-ui-react\";\nimport SplitText from 'react-pose-text';\nimport {Link, Router} from \"react-router-dom\";\nimport history from \"../history\";\n\nconst charPoses = {\n    exit: { opacity: 0, y: 20 },\n    enter: {\n        opacity: 1,\n        y: 0,\n        delay: ({ charIndex }) => charIndex * 60\n    }\n};\nclass App extends Component{\n    renderMenu(){\n        if (this.props.menu.length < 1){\n            return null\n        }\n        return (\n            <Menu inverted  widths={6} className={'mainMenu'}  pointing secondary  >\n                <Router history={history}>\n                    {\n                        this.props.menu.map(\n                            (item, key) => (\n                                <Menu.Item\n                                    name={item.reference}\n                                    key={`menuItem-${key}`}\n                                    as={Link}\n                                    to={'/'+item.reference}>\n                                    {item.name}\n                                </Menu.Item>\n                            ))\n                    }\n                </Router>\n            </Menu>\n        )\n    }\n    render() {\n        return(\n            <>\n            <div className='appContent' >\n                <div className={'welcome'}>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row verticalAlign='middle' className={'welcome-box'} >\n                            <Grid.Column textAlign={'center'} >\n                                <div className=\"introName\">\n                                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                    {this.props.applicationDetails.title}\n                                </SplitText>\n                                </div>\n                                <div className=\"sloganText\">\n                                    <Transition\n                                        unmountOnHide={false}\n                                        visible={this.props.sloganText}\n                                        animation={\"fade up\"}\n                                        duration={{ show:1000 }}\n                                    >\n                                        <div>\n                                            {this.props.applicationDetails.sub_title}\n                                        </div>\n                                    </Transition>\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Transition\n                            unmountOnHide={false}\n                            visible={this.props.sloganText}\n                            animation={\"fade down\"}\n                            duration={{ show:800 }}\n                        >\n                        <Grid.Row>\n                            <Grid.Column>\n                                {this.renderMenu()}\n                            </Grid.Column>\n                        </Grid.Row>\n                        </Transition>\n                    </Grid>\n                </Container>\n                </div>\n                <Transition\n                    unmountOnHide={false}\n                    visible={this.props.sloganText}\n                    animation={\"fade up\"}\n                    duration={{ show:1000 }}\n                >\n                <div className={'page-section'}>\n                    <Container>\n                        {this.props.activePageContent}\n                    </Container>\n                </div>\n                </Transition>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default App","export const baseUrl='http://165.22.196.58:8080/ovogrowth';\nexport const projectName='OvoGrowth';\n","import axios from 'axios'\nimport {baseUrl} from \"../config\";\n\nexport default axios.create({\n   'baseURL': baseUrl\n});\n\n","export const configError = {\n    FAILED_CONFIG: \"application configuration could not be received from API\"\n};\n\nexport const moduleError = {\n    INVALID_MODULE: \"config item is assigned to an unknown module\",\n    INVALID_MODULE_ATTRS: `module config does not contain the required attrs`,\n    INVALID_MODULE_REF: \"reference alias doesn't refer to an item\",\n};\n","import _ from \"lodash\";\nimport {moduleError} from '../constants/errorTypes'\n\nexport const getOnlyPublished = (data) =>{\n\n    return _.values(_.filter(\n        data, function(item){ return item.status === 'published' || item.published === 'published' })\n    );\n};\n\nexport const validateAttributes = (obj, required_attributes) =>{\n    return (required_attributes.every(key => Object.keys(obj).includes(key)))\n};\n\nexport const validateReferenceAlias = (key, obj)=>{\n    return obj.hasOwnProperty(key)\n};\n\nexport class throwError{\n    static config = (message) =>{\n        console.error( `Configuration error -  ${message}`);\n    };\n    static module = (message) =>{\n        console.error( `Module error -  ${message}`);\n    };\n    static moduleAttr = (module, attrs) =>{\n        console.error( `Module error -  ${module} ${moduleError.INVALID_MODULE_ATTRS}: ${attrs}`);\n    };\n}","export const config = {\n    GET_CONFIG: \"GET_CONFIG\",\n    SET_CONFIG: \"SET_CONFIG\"\n};\n\nexport const collections = {\n    ADD_COLLECTION: \"ADD_COLLECTION\"\n};\n\nexport const protocol ={\n    PROTOCOL_COMPLETED:'PROTOCOL_COMPLETED',\n    PROTOCOL_FAILED :'PROTOCOL_FAILED',\n};\n\nexport const application ={\n    GET_APPLICATION_DONE: \"GET_APPLICATION_DONE\",\n    GET_APPLICATION_FAILED: \"GET_APPLICATION_FAILED\"\n};\n\nexport const modules ={\n    cellTypeViewer: {\n        GET_CELLS: \"GET_CELLS\"\n    }\n};","export const required = value => value ? undefined : 'Required';\nexport const minValueChar = min => value => value.length && value.length < min ? `Must be at least ${min} characters` : undefined;\nexport const minValue5 = minValueChar(5);\nexport const email = value =>value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;","import React from 'react'\nimport {Button, Grid, Icon, Label} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\n\n\nconst ButtonModule = (props) =>{\n    switch(props.setting.config.type) {\n        case 'github':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Button as='div' labelPosition='right'>\n                            <Button color='blue'>\n                                <Icon name='github' />\n                                GitHub\n                            </Button>\n                            <Label basic  pointing='left'>\n                                {props.setting.config.config.label}\n                            </Label>\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        case 'download':\n            return(\n                <Grid.Row>\n                    <Grid.Column textAlign={'center'}>\n                        <a href={props.setting.config.config.link} download target={'_blank'}>\n                        <Button icon labelPosition='left'>\n                            <Icon name='cloud' />\n                            {props.setting.config.config.label}\n                        </Button>\n                        </a>\n                    </Grid.Column>\n                </Grid.Row>\n            );\n        default:\n            throwError.module(`Button not rendered, type: ${props.moduleName} not found`);\n            return null;\n    }\n};\n\nexport default ButtonModule","import React from 'react'\nimport Parser from \"html-react-parser\";\nimport _ from 'lodash'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport {validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\"\n\nconst module = 'content';\nconst required_attributes = ['reference_alias', 'content'];\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\n\nconst ContentModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        const pointer_set = _.keyBy(props.collection, 'reference_alias');\n        if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n            throwError.module(moduleError.INVALID_MODULE_REF);return null}\n        return (\n            <>\n            {getTitle(pointer_set[props.setting.alias_ref].title)}\n            <Grid.Row>\n                <Grid.Column>\n                {Parser(pointer_set[props.setting.alias_ref].content)}\n                </Grid.Column>\n            </Grid.Row>\n            </>\n        )\n    }\n    return null\n\n};\n\nexport default ContentModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Timeline from \"react-timeline-semantic-ui\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst module = 'tool_steps';\nconst required_attributes = ['icon', 'title', 'step_name', 'description', 'tags'];\n\n\nconst ToolStepModule = (props) =>{\n    if (props.collection){\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column className={'timeLine'}>\n                    {props.collection.map(\n                        (item, key) =>{\n                            let dir = ((key + 1)%2 === 1)?'left': 'right';\n                            return(\n                                <Timeline\n                                    key={`timelineItem-${key}`}\n                                    className={'time-item'}\n                                    direction={dir}\n                                    icon={item.icon}\n                                    title={item.title}\n                                    time={`${key+1} ${item.step_name}`}\n                                    description={item.description}\n                                    color=\"blue\"\n                                    tags={item.tags}\n                                    lineHeight={key}\n                                />\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ToolStepModule","import React from 'react'\nimport _ from 'lodash'\nimport {Grid, Header, Icon, Image} from \"semantic-ui-react\";\nimport {List} from \"semantic-ui-react\";\nimport {throwError, validateAttributes, validateReferenceAlias} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\n\nconst getTitle = (title, size='h2') =>{\n    if(!title){\n        return null\n    }\n    return(\n        <Grid.Row>\n            <Grid.Column >\n                <Header as={size}>\n                    {title}\n                </Header>\n            </Grid.Column>\n        </Grid.Row>\n    )\n};\nconst ListModule = (props) =>{\n    if (props.collection){\n        switch (props.setting.config.type) {\n            case 'icon-list':\n                return renderIconList(props);\n            case 'download-list':\n                return renderDownloadList(props);\n            default:\n                return null\n        }\n    }\n    return null\n\n};\nconst renderIconList = (props) => {\n    const module = 'tool_steps';\n    const required_attributes = ['icon', 'title', 'description'];\n    if (!validateAttributes(props.collection[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n\n    return (\n        <>\n            {getTitle(props.setting.title)}\n            <Grid.Row>\n                <Grid.Column >\n                    <List divided relaxed>\n                        {props.collection.map(\n                            (item, key) => {\n                                return (\n                                    <List.Item key={`list-icon-${key}-${props.setting.collection}`}>\n                                        <List.Icon name={item.icon} size='large' verticalAlign='top' />\n                                        <List.Content>\n                                            <List.Header as='a'>{item.title}</List.Header>\n                                            <List.Description as='a'>{item.description}</List.Description>\n                                        </List.Content>\n                                    </List.Item>\n                                )\n                            }\n                        )}\n                    </List>\n                </Grid.Column>\n            </Grid.Row>\n        </>\n    );\n};\nconst renderDownloadList = (props) =>{\n    const module = 'tool_steps';\n    const required_attributes = ['link', 'title', 'description'];\n    if (!validateAttributes(props.collection[0].items[0], required_attributes)){\n        throwError.moduleAttr(module, required_attributes);return null}\n    const pointer_set = _.keyBy(props.collection, 'reference_alias');\n    if (!validateReferenceAlias(props.setting.alias_ref, pointer_set)){\n        throwError.module(moduleError.INVALID_MODULE_REF);return null}\n    return (\n        <Grid.Row>\n            <Grid.Column>\n                {getTitle(props.setting.title, 'h3')}\n                <List >\n                    {pointer_set[props.alias_ref].items.map(\n                        (item, key) => {\n                            return (\n                                <List.Item key={`download-list-${key}`}>\n                                    <Image avatar>\n                                        <a href={item.link} download>\n                                            <Icon avatar={'true'} circular inverted name='download' />\n                                        </a>\n                                    </Image>\n                                    <List.Content>\n                                        <List.Header>{item.title}</List.Header>\n                                        {item.description}\n                                    </List.Content>\n                                </List.Item>\n                            )\n                        }\n                    )}\n                </List>\n            </Grid.Column>\n        </Grid.Row>\n    );\n}\n\nexport default ListModule","import React from 'react'\nimport {Grid} from \"semantic-ui-react\";\nimport Parser from \"html-react-parser\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst FaqModule = (props) =>{\n    if (props.collection){\n        let module = 'faqs';\n        let required_attributes = ['question', 'answer'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    {props.collection.map(\n                        (item, key) =>{\n\n                            return (\n                                <div key={`question-answer-${key}`}>\n                                    <p><b>Q: {item.question}</b></p>\n                                    {Parser(item.answer)}\n                                    <br/>\n                                </div>\n                            )\n                        }\n                    )}\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default FaqModule","import React from 'react'\nimport {Grid, Icon, Image} from \"semantic-ui-react\";\nimport {Card} from \"semantic-ui-react\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\n\nconst checkImage = (cardData) =>{\n    try{\n        return cardData.image.data.full_url\n    }\n    catch (e) {\n        return 'https://via.placeholder.com/150'\n    }\n};\nconst renderCard =  (cardData ,key) =>{\n    return (\n        <Card key={`contact-card-${key}`}>\n            <Image src={checkImage(cardData)} wrapped ui={false} />\n            <Card.Content>\n                <Card.Header>{cardData.name}</Card.Header>\n                <Card.Meta>\n                    <span className='date'>\n                        Joined in {cardData.year_joined}{cardData.year_left? \", left in \"+cardData.year_left:\"\"}\n                    </span>\n                </Card.Meta>\n                <Card.Description>\n                    {cardData.job_description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                    <Icon name='mail' />\n                    {cardData.email}\n            </Card.Content>\n        </Card>\n    )\n};\n\nconst ContactCardsModule = (props) =>{\n    if (props.collection){\n        let module = 'contact-cards';\n        let required_attributes = ['name', 'job_description', 'year_joined'];\n        if (!validateAttributes(props.collection[0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return (\n            <Grid.Row>\n                <Grid.Column>\n                    <Card.Group textAlign={'center'} itemsPerRow={3}>\n                        {props.collection.map(\n                            (item, key) =>{\n                                return renderCard(item, key)\n                            }\n                        )}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n    return null\n\n};\n\nexport default ContactCardsModule","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) =>{\n    return(\n        <Form.Field>\n            <label>{label}</label>\n            <Input {...input}  {...inputAttr} autoComplete='off' />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import React from 'react'\nimport {Form, Input} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) =>{\n    if(touched && error){\n        return(\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\n\nexport default  ({ input: {value: omitValue, ...inputProps }, meta: omitMeta, ...props }) =>{\n    return(\n        <Form.Field>\n            <label>{props.label}</label>\n            <Input\n                type={'file'}\n                {...inputProps}\n                {...props.input}\n                autoComplete='off' />\n            {renderError(omitMeta)}\n        </Form.Field>\n    )\n};\n","import React from 'react'\nimport {Dropdown, Form} from \"semantic-ui-react\";\n\nconst renderError = ({touched, error}) => {\n    if (touched && error) {\n        return (\n            <div className={'errorMessage'}>{error}</div>\n        )\n    }\n};\nexport default (input, label, meta, inputAttr) => {\n    return (\n        <Form.Field>\n            <label>{label}</label>\n            <Dropdown selection {...input}\n                      {...inputAttr}\n                      value={input.value}\n                      onChange={(param, data) => input.onChange(data.value)}\n                      placeholder={label}\n            />\n            {renderError(meta)}\n        </Form.Field>\n    )\n};\n\n","import checkBox from './checkBoxInput'\nimport text from './textInput'\nimport file from './fileInput'\nimport slider from \"./sliderInput\";\nimport select from \"./selectInput\";\n\nexport const textInput = ({input,label,meta,inputAttr}) => text(input,label,meta,inputAttr);\nexport const fileInput = (props) => file(props);\nexport const selectInput = ({input,label,meta,inputAttr}) => select(input,label,meta,inputAttr);\nexport const checkBoxInput = ({input,label,meta,inputAttr={}}) => checkBox(input,label,meta,inputAttr);\nexport const sliderInput = ({input,label,meta,inputAttr={}}) => slider(input,label,meta,inputAttr);\n","import React, {Component} from 'react'\nimport {Button, Form, Grid, Icon, Segment, Transition} from \"semantic-ui-react\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {required} from \"../../constants/formValidationRules\";\nimport {fileInput, selectInput, textInput} from \"../helpers/redux-form-inputs\";\nimport {throwError, validateAttributes} from \"../../utils/generalHelpers\";\nimport {protocol} from \"../../constants/types\";\n\nclass FormModule extends Component{\n\n    state = {fileInputCode: 'fileCode'};\n    onSubmit = (formValues, dispatch) =>{\n        this.props.onSubmit(\n            this.props.collection['form'][0],\n            formValues\n        );\n        dispatch(reset('mainForm'));\n        this.setState({fileInputCode: Math.random().toString(36).substring(7)})\n    };\n    renderForm(){\n        if(this.props.collection['inputs'].length < 1){\n            return <b><i>Form under construction!</i></b>\n        }else{\n            return (\n                <div>\n                    {this.renderInputs()}\n                    <Button type={'submit'} icon labelPosition='left' size='large'  floated='right'>\n                        <Icon name='paper plane' />\n                        Run!\n                    </Button>\n                </div>\n            )\n        }\n    }\n    renderInputType = (input, key) => {\n        switch (input.input_type.type) {\n            case 'text':\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={textInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            type:'text',\n                        }}\n                    />\n                );\n            case 'file':\n                return (\n                    <Field\n                        key={`field-input-${key}-${this.state.fileInputCode}`}\n                        name={input.api_reference_parameter}\n                        component={fileInput}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`\n                        }}\n                    />\n                );\n            case 'select':\n                const options = this.createOptions(key, input.option_titles, input.option_values);\n                return (\n                    <Field\n                        key={`field-input-${key}`}\n                        name={input.api_reference_parameter}\n                        component={selectInput}\n                        validate={[ required ]}\n                        label={input.label}\n                        inputAttr={{\n                            placeholder: `Enter the ${input.label.toLowerCase()}`,\n                            options: options}\n\n                        }\n                    />\n                );\n            default:\n                return null\n\n        }\n    };\n    createOptions = (index, titles, values) => {\n        const options = [];\n        titles.forEach(\n            (title, key) =>{\n                options.push({\n                    'key': `optionItem-${index}-${key}`,\n                    'text': titles[key],\n                    'value': values[key]\n                })\n            }\n        );\n        return options\n    };\n    renderInputs(){\n        return this.props.collection['inputs'].map(\n            (input, key) => this.renderInputType(input, key)\n        )\n    }\n\n    render() {\n        if(!this.props.collection['inputs']){\n            return null\n        }\n        let module = 'form:form';\n        let required_attributes = ['title', 'api', 'tool_reference', 'description'];\n        if (!validateAttributes(this.props.collection['form'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        module = 'form:inputs';\n        required_attributes = ['api_reference_parameter', 'label', 'input_type'];\n        if (!validateAttributes(this.props.collection['inputs'][0], required_attributes)){\n            throwError.moduleAttr(module, required_attributes);return null}\n        return(\n            <Grid.Row>\n                <Grid.Column>\n                    {(this.props.protocolStatus === protocol.PROTOCOL_COMPLETED)?(\n                        <Transition\n                            transitionOnMount={true}\n                            animation={\"slide down\"}\n                            duration={{ show:1000 }}\n                        >\n                            <Segment color={'green'}>\n                                <b>Algorithm executed!</b> Dataset will be in your mail when ready\n                            </Segment>\n                        </Transition>\n                    ):''\n                    }\n                    {(this.props.protocolStatus === protocol.PROTOCOL_FAILED)?(\n                        <Transition\n                            transitionOnMount={true}\n                            animation={\"slide down\"}\n                            duration={{ show:1000 }}\n                        >\n                            <Segment color={'red'}>\n                                <b>Algorithm encountered an error!</b> please make sure the configuration is setup correctly\n                            </Segment>\n                        </Transition>\n                    ):''\n                    }\n                    <h3>Configuration</h3>\n                    <Form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                        {this.renderForm()}\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n        )\n    }\n\n}\nexport default reduxForm({\n    form:'mainForm'\n})(FormModule)","import React, {Component} from 'react'\nimport {Grid} from 'semantic-ui-react'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport _ from 'lodash'\n\nclass ClusterViewer extends Component {\n\n    createDataPoints = (data) =>{\n        const plotTraces = [];\n        const clusters = _.groupBy(data, 'cluster_id')\n        Object.keys(clusters).forEach( (key) => {\n            const datapoints = clusters[key].map( (item) => {\n                return [parseFloat(item.tsne_1), parseFloat(item.tsne_2)]\n            });\n            const trace = {\n                data: datapoints,\n                name: \"Label \"+key,\n                opacity: 0.7,\n                marker: {\n                    height: 1,\n                    width: 1,\n                    symbol: 'circle'\n                },\n                animation: false\n            };\n            plotTraces.push(trace)\n        });\n        return plotTraces\n    }\n    render() {\n        if (this.props.modulesData.cells.length < 1)return null\n        return (\n            <Grid.Column width={16}>\n                <HighchartsReact\n                    highcharts={Highcharts}\n                    options={{\n                        plotOptions: {\n                            series: {\n                                events: {\n                                    legendItemClick: function (e) {\n                                        e.preventDefault();\n                                    }\n                                }\n                            }\n                        },\n                        legend: {\n                            layout: 'vertical',\n                            align: 'right',\n                            verticalAlign: 'top',\n                            backgroundColor: '#FFFFFF'\n                        },\n                        chart: {\n                            type: 'scatter',\n                            zoomType:'xy',\n                            height: '800px'\n                        },\n                        exporting: {\n                            enabled: true\n                        },\n                        navigator: {\n                            enabled: true\n                        },\n                        title: {\n                            text: 'My chart'\n                        },\n                        tooltip: {\n                            headerFormat: '<b>{series.name}</b><br>'\n                        },\n                        yAxis:[{\n                            lineWidth: 0,\n                            title:\"\"\n                        }],\n                        allowPointSelect: false,\n                        series: this.createDataPoints(this.props.modulesData.cells)\n                    }}\n                />\n            </Grid.Column>\n        )\n    }\n}\n\nexport default ClusterViewer\n","import React from 'react'\n\nimport ButtonModule from './ButtonModule'\nimport ContentModule from './ContentModule'\nimport ToolStepModule from './ToolStepsModule'\nimport ListModule from \"./ListModule\";\nimport FaqModule from \"./FaqModule\";\nimport ContactCardsModule from \"./ContactCardsModule\";\nimport FormModule from \"./FormModule\";\nimport {throwError} from \"../../utils/generalHelpers\";\nimport {moduleError} from \"../../constants/errorTypes\";\nimport ClusterViewer from \"./ClusterViewer\";\nimport Page from \"../Page\";\n\nconst ModuleLoader = (props) =>  {\n    switch(props.setting.module) {\n        case 'content':\n            return (\n                <ContentModule\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'button':\n            return (\n                <ButtonModule\n                    setting={props.setting}\n                />\n            );\n        case 'tool_steps':\n            return (\n                <ToolStepModule\n                    collection={props.collection}\n                />\n            );\n        case 'list':\n            return(\n                <ListModule\n                    alias_ref={props.setting.alias_ref}\n                    setting={props.setting}\n                    collection={props.collection}\n                />\n            );\n        case 'faqs':\n            return (\n                <FaqModule\n                    collection={props.collection}\n                />\n            );\n        case 'contact-cards':\n            return(\n                <ContactCardsModule\n                    collection={props.collection}\n                />\n            );\n        case 'form':\n            return(\n                <FormModule\n                    onSubmit={props.onSubmit}\n                    collection={props.collection}\n                    protocolStatus={props.protocolStatus}\n                />\n            );\n        case 'cluster-viewer':\n            return (\n                <ClusterViewer\n                    getCells={props.getCells}\n                    modulesData={props.modulesData.cellTypeViewer}\n                />\n            )\n        default:\n            throwError.module(moduleError.INVALID_MODULE);\n            return null\n    }\n};\n\nexport default ModuleLoader","\nimport React, {Component} from 'react'\nimport ModuleLoader from './modules/moduleLoader'\nimport {Grid, Header} from \"semantic-ui-react\";\nimport {pageLoader} from \"./hooks/pageLoader\";\n\nclass Page extends Component{\n    state = {loaded: false}\n    componentDidMount() {\n        this.setState({loaded:true})\n    }\n\n    getCollection (collection){\n        if (!collection){\n            return null\n        }\n        if (collection in this.props.collections){\n            return this.props.collections[collection]\n        }\n        else{\n            return null\n        }\n    }\n    renderModules(){\n        return this.props.config.settings.map(\n            (setting, key) =>{\n                if (setting.module === 'form'){\n                    return(\n                        <ModuleLoader\n                            modulesData={this.props.modulesData}\n                            getCells={this.props.getCells}\n                            onSubmit={this.props.onSubmit}\n                            page={this.props.config.name}\n                            key={`module-${this.props.config.reference}-${key}`}\n                            collection={{\n                                'form': this.getCollection(setting.collection),\n                                'inputs': this.getCollection('inputs')\n                            }}\n                            setting={setting}\n                            protocolStatus={this.props.protocolStatus}\n                        />\n                    )\n                }\n                return (\n                    <ModuleLoader\n                        modulesData={this.props.modulesData}\n                        getCells={this.props.getCells}\n                        page={this.props.config.name}\n                        key={`module-${this.props.config.reference}-${key}`}\n                        collection={this.getCollection(setting.collection)}\n                        setting={setting}\n                    />\n                )\n            }\n        )\n    }\n    render() {\n        if (!this.props.path){\n            return null\n        }\n        if (!this.state.loaded){\n            return pageLoader(this.state.loaded)\n        }\n        return (\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as='h1' dividing>\n                            {this.props.config.name}\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                {this.renderModules()}\n            </Grid>\n        )\n    }\n\n}\nexport  default  Page;","import React, { useEffect } from 'react';\n\nexport const pageLoader = (pageLoaded) => {\n    if(pageLoaded) return null;\n    alert('test')\n    return (\n        <div>\n            Loading\n        </div>\n    );\n}","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nimport App from \"../components/App\";\nimport {Dimmer, Icon, Loader, Segment} from \"semantic-ui-react\";\nimport _ from 'lodash'\nimport 'fs'\nimport history from '../history'\n\nimport {getConfig, getApplication} from '../actions/configActions'\nimport {getCells} from '../actions/modules/cellTypeViewerActions'\nimport {getCollections} from '../actions/collectionActions'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport {directProtocol} from '../actions/protocols/directProtocolActions'\n\nimport {projectName, baseUrl} from \"../config.js\";\nimport {throwError} from \"../utils/generalHelpers\";\nimport {configError} from '../constants/errorTypes'\n\n\nclass AppContainer extends Component {\n\n    state = {\n        menu: [],\n        sloganText: false,\n        pageView: false,\n        render: false,\n        config: false\n    };\n    onSubmit = (config, values) => {\n        switch (config.api.protocol) {\n            case 'direct':\n                this.props.directProtocol(config, values);\n            break;\n            default:\n                console.log('No valid protocol connected to form')\n        }\n    };\n    getCollections = () =>{\n        const collections = [];\n        this.props.config.forEach(\n            (settingItem) => {\n                settingItem.settings.forEach(\n                    (item) =>{\n                        if(item.collection){\n                            if(item.collection === 'form'){\n                                collections.push(item.collection);\n                                collections.push('inputs');\n                            }\n                            collections.push(item.collection)\n                        }\n                    }\n                )\n            }\n        );\n        return _.uniq(collections)\n    };\n\n    loadConfig = async () =>{\n        await this.props.getApplication();\n        await this.props.getConfig();\n        const collections = this.getCollections();\n        await this.props.getCollections(collections);\n        this.setState({menu:this.props.config});\n    };\n\n    UNSAFE_componentWillMount(){\n        if(baseUrl !== null){\n            this.setState({config: true});\n        }\n    }\n    componentDidMount() {\n        this.loadConfig();\n        this.props.getCells()\n        setTimeout(function() {\n            this.setState({render: true})\n        }.bind(this), 4000);\n        setTimeout(\n            () => {\n                this.setState({sloganText: true})\n            }, 1200);\n    }\n    renderRoutes() {\n        return this.props.config.map(\n            (item) =>{\n                return (\n                    <Route\n                        key={`route-${item.reference}`}\n                        path={'/'+item.reference}\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page\n                                {...props}\n                                modulesData={this.props.modules}\n                                getCells={this.props.getCells}\n                                path={'/'+item.reference}\n                                config={item}\n                                collections={this.props.collections}\n                                onSubmit={this.onSubmit}\n                                protocolStatus={this.props.protocolStatus}\n                            />)\n                        }\n                    />\n                )\n            }\n        )\n    }\n    wrapTransition =  (object) => {\n        return object\n    };\n    renderContent() {\n        if(this.props.config.length === 0){\n            return null\n        }\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={(props) => this.wrapTransition(\n                            <Page {...props}\n                                  getCells={this.props.getCells}\n                                  modulesData={this.props.modules}\n                                  path={'/'+this.props.config[0].reference}\n                                  config={this.props.config[0]}\n                                  collections={this.props.collections}\n                                  protocolStatus={this.props.protocolStatus}\n                                  onSubmit={this.onSubmit}\n                            />)\n                        }\n                    />\n                    {this.renderRoutes()}\n                </Switch>\n            </Router>\n        );\n    }\n    render() {\n        if(this.state.render && !_.isEmpty(this.props.config)) {\n            document\n                .documentElement.style.setProperty(\"--color-primary\", this.props.application.primary_color);\n            return (<App\n                    applicationDetails={this.props.application}\n                    activePageContent={this.renderContent()}\n                    collections={this.props.collections}\n                    config={this.props.config}\n                    menu={this.props.config}\n                    />\n            )\n        }\n        else if(!this.state.render){\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Loader indeterminate inline='centered'>Preparing the {projectName} website</Loader>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n        else{\n            throwError.config(configError.FAILED_CONFIG);\n            return (\n                <Segment className={'loading-segment'}>\n                    <Dimmer active>\n                        <Icon name='close' size='huge' inverted color='grey' />\n                        <br/>\n                        <p>Failed to load website</p>\n                    </Dimmer>\n                </Segment>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: _.values(state.config),\n        collections: state.collections,\n        protocolStatus:state.protocolStatus,\n        application: state.application[0],\n        modules: state.modules\n    }\n};\nexport default connect(mapStateToProps,\n    {\n        getConfig,\n        getApplication,\n        getCollections,\n        directProtocol,\n        getCells\n    })(AppContainer)","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {application, config} from '../constants/types'\n\n\nexport const getConfig = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/config');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: config.SET_CONFIG, payload: publishedConfig})\n};\n\nexport const getApplication = () => async (dispatch) =>{\n    const result = await SascWebApi.get('items/application');\n    const publishedConfig = getOnlyPublished(result.data.data);\n    dispatch({type: application.GET_APPLICATION_DONE, payload: publishedConfig})\n};","import SascWebApi from \"../apis/SascWeb\";\nimport {getOnlyPublished} from '../utils/generalHelpers'\nimport {collections} from '../constants/types'\n\n\nexport const getCollections = (rawCollections) => (dispatch) =>{\n    let count = 0;\n    let collectionData = {};\n    rawCollections.forEach( async (item) => {\n        const result = await SascWebApi.get('items/'+item+'?fields=*.*.*');\n        collectionData[item] = getOnlyPublished(result.data.data);\n        count++;\n        if(count === rawCollections.length){\n            dispatch({type: collections.ADD_COLLECTION, payload:collectionData})\n        }\n    });\n\n};\n\n\n\n","import axios from \"axios\";\n\nimport {protocol} from '../../constants/types'\n\nexport const directProtocol = (config, data) => async (dispatch) => {\n    let bodyFormData = new FormData();\n    bodyFormData.set('email', data.email);\n    bodyFormData.set('training', data.training);\n    bodyFormData.append('file', data.file[0]);\n    await axios({\n        method: 'post',\n        url: config.tool_reference,\n        data: bodyFormData,\n        config: { headers: {'Content-Type': 'multipart/form-data',  'Accept': 'text/html' }}\n    });\n    dispatch({\n        type:protocol.PROTOCOL_COMPLETED\n    });\n};","import SascWebApi from \"../../apis/SascWeb\";\nimport {modules} from \"../../constants/types\";\n\n\nexport const getCells = () => async (dispatch) =>{\n    const result = await SascWebApi.get('/items/cell?limit=50000');\n    dispatch({type: modules.cellTypeViewer.GET_CELLS, payload: result.data.data})\n}\n","import {combineReducers} from \"redux\";\nimport cellsReducer from \"./cellsReducer\";\n\nexport const cellTypeViewerReducer = combineReducers({\n    cells: cellsReducer\n})","import {modules} from '../../../constants/types'\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case modules.cellTypeViewer.GET_CELLS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport {cellTypeViewerReducer} from './cellTypeViewer'\n\nexport default combineReducers({\n    cellTypeViewer: cellTypeViewerReducer\n});","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from 'redux-form'\nimport configReducer from './configReducer'\nimport collectionsReducer from \"./collectionsReducer\";\nimport protocolStatusReducer from './protocols/protocolStatusReducer'\nimport applicationReducer from \"./applicationReducer\";\nimport modules from \"./modules\";\n\nexport default combineReducers({\n    form: formReducer,\n    protocolStatus: protocolStatusReducer,\n    application: applicationReducer,\n    config: configReducer,\n    collections: collectionsReducer,\n    modules: modules\n});","import {protocol} from \"../../constants/types\";\n\nexport default (state='', action) => {\n    switch (action.type) {\n        case protocol.PROTOCOL_COMPLETED:\n            return protocol.PROTOCOL_COMPLETED;\n        default:\n            return ''\n    }\n}","import {application} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case application.GET_APPLICATION_DONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {config} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case config.SET_CONFIG:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {collections} from '../constants/types'\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case collections.ADD_COLLECTION:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport App from \"./containers/AppContainer\";\nimport 'semantic-ui-css/semantic.min.css'\nimport './assets/main.css'\nimport reducers from './reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}